{"version":3,"sources":["_dispatcher.js","_store/AppDataStore.js","_actions/AppActions.js","_containers/Login/index.js","_components/Header/index.js","_actions/PostActions.js","_containers/Dashboard/index.js","_containers/Settings/index.js","_containers/Login/Reset.js","_store/ReCalculate.js","_store/PostDataStore.js","_containers/InitialDetails.js","_components/Sidebar/index.js","_components/StandaloneQuestion.js","_components/CategorizedQuestion.js","_components/MultiChoiceQuestion.js","_components/StatusBar.js","_containers/EBP.js","_containers/Export.js","_actions/ReportActions.js","_store/ReportData.js","_containers/Report.js","_containers/TBP.js","App/index.js","serviceWorker.js","index.js","Assets/iconLogin.svg"],"names":["Dispatcher","newStore","props","appState","loading","isLoggedIn","userEmail","token","isAdmin","error","submissionSuccess","currentForm","this","resetAppState","action","type","console","log","emit","payload","email","logOut","success","postType","EventEmitter","dispatcher","register","handleActions","bind","logout","localStorage","clear","dispatch","resetApp","Login","state","username","password","handleChange","doLogin","event","setState","target","name","value","e","preventDefault","keepMeLoggedIn","toString","options","method","headers","body","JSON","stringify","fetch","then","res","json","data","status","user","setItem","catch","err","login","className","src","icon","placeholder","id","onChange","onClick","Component","Header","to","alt","role","href","updatePostData","category","submitPost","obj","url","toLowerCase","AppDataStore","getToken","response","errorCode","forceSubmitPostOverride","postInfo","requestId","Dashboard","handleClick","formType","newPost","history","push","Settings","htmlFor","Reset","validateData","handleSubmit","valid","resetPassword","newPassword","confirmPassword","onSubmit","reCalculate","post","plagiarism","total","copyscape","uniqueness","spellcheck","basic","vendorInfo","wordUsage","grammar","writingProficiency","pov","readability","topic","appropriateness","date","focus","headline","adverseness","clientGoals","performance","linkText","linkMatchesHeaders","compliance","words","isEthical","noMisleadingImpressions","noFactualInaccuracies","tone","source","score","Number","parseFloat","toFixed","checkCompulsoryValues","reCalculateEBP","clientPracGoals","reCalculateTBP","i","length","on","vendorName","clientName","postTitle","postDate","Date","userId","newPostForm","resetPostData","InitialDetails","getPostData","PostDataStore","formSubmit","handleDate","setHours","getCurrentFormType","getItem","removeListener","Sidebar","StandaloneQuestion","handler","val","warning","children","checked","CategorizedQuestion","MultiChoiceQuestion","StatusBar","totalPossiblePoints","totalPercent","showStatus","Content","handleChangeSingle","handleChangeCategorized","handleOverrideChange","formFinalSubmit","confirmSubmission","override","cat","confirmStatus","class","for","Export","axios","responseType","download","Blob","exportPostData","required","updateReport","fromDate","getFullYear","toDate","report","prop","Report","start","end","getReport","getReportData","ReportData","getData","reportComponent","angle","achieved","color","partiallyAchieved","didNotAchieve","width","height","showLabels","colorType","App","appDataStore","getAppState","parse","checkToken","errObj","errors","properties","style","marginTop","message","exact","path","component","EBP","TBP","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.4fda8d98.chunk.js","sourcesContent":["import { Dispatcher } from 'flux';\r\n\r\nexport default new Dispatcher; ","import { EventEmitter } from 'events';\r\nimport dispatcher from '_dispatcher.js';\r\n\r\nclass Store extends EventEmitter{\r\n    constructor(props){\r\n        super(props);\r\n        this.appState = {\r\n            loading: false,\r\n            isLoggedIn: false,\r\n            userEmail: null,\r\n            token: null,\r\n            isAdmin: false,\r\n            error: null,\r\n            submissionSuccess: null,\r\n            currentForm: null\r\n        }\r\n    }\r\n\r\n    logOut(){\r\n        this.resetAppState();\r\n        this.appState.isLoggedIn = false;\r\n        this.appState.userEmail = null;\r\n        this.appState.token = null;\r\n        this.appState.isAdmin = false;\r\n    }\r\n    \r\n    getAppState(){\r\n        return this.appState;\r\n    }\r\n\r\n    getCurrentFormType(){\r\n        return this.appState.currentForm;\r\n    }\r\n\r\n    getToken(){\r\n        return this.appState.token;\r\n    }\r\n\r\n    resetAppState(){\r\n        this.appState.loading = false;\r\n        this.appState.error= null;\r\n        this.appState.submissionSuccess= null;\r\n        this.appState.currentForm = null;\r\n    }\r\n\r\n    handleActions(action){\r\n        switch(action.type){\r\n            case \"LOADING_START\": {\r\n                this.appState.loading = true;\r\n                console.log(\"load1: \", this.appState);\r\n                this.emit(\"change\");\r\n                break;\r\n            }\r\n\r\n            case \"LOADING_COMPLETE\": {\r\n                this.appState.loading = false;\r\n                console.log(\"load2: \", this.appState);\r\n                this.emit(\"change\");\r\n                break;\r\n            }\r\n\r\n            case \"LOGIN\": {\r\n                console.log(\"store: \", action);\r\n                this.appState.loading = false;\r\n                this.appState.token = action.payload.token;\r\n                this.appState.userEmail = action.payload.email;\r\n                this.appState.isLoggedIn = true;\r\n                console.log(\"store2: \", this.appState);\r\n                this.emit(\"change\");\r\n                break;\r\n            }\r\n\r\n            case \"LOGOUT\": {\r\n                this.logOut();\r\n                console.log(\"logout: \", this.appState);\r\n                this.emit(\"change\");\r\n                break;\r\n            }\r\n\r\n            case \"APP_ERROR\": {\r\n                this.appState.error = action.payload.error;\r\n                console.log(\"APP_ERROR: \", this.appState);\r\n                this.emit(\"change\");\r\n                break;\r\n            }\r\n\r\n            case \"APP_SUCCESS\": {\r\n                this.appState.submissionSuccess = action.payload.success;\r\n                this.emit(\"change\");\r\n                break;\r\n            }\r\n\r\n            case \"APP_RESET\": {\r\n                this.resetAppState();\r\n                this.emit(\"change\");\r\n                break;\r\n            }\r\n\r\n            case \"NEW_POST_FORM\": {\r\n                this.appState.currentForm = action.payload.postType;\r\n                this.emit(\"change\");\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nconst newStore = new Store;\r\n\r\ndispatcher.register(newStore.handleActions.bind(newStore));\r\n\r\nexport default newStore;","import dispatcher from \"_dispatcher\";\r\nimport AppDataStore from '_store/AppDataStore';\r\n\r\nexport function checkToken(){\r\n    console.log(\"checking token\");\r\n    dispatcher.dispatch({\r\n        type: \"LOADING_START\"\r\n    });\r\n    let user = JSON.parse(localStorage.getItem('user'));\r\n    console.log(\"checking token\", user);\r\n    if(user && user.token && user.username){\r\n        dispatcher.dispatch({\r\n            type: \"LOGIN\",\r\n                payload: {\r\n                    email: user.username,\r\n                    token: user.token\r\n                }\r\n        });\r\n    }\r\n    dispatcher.dispatch({\r\n        type: \"LOADING_COMPLETE\"\r\n    });\r\n}\r\n\r\nexport function login(username, password, keepMeLoggedIn){\r\n    dispatcher.dispatch({\r\n        type: \"LOADING_START\"\r\n    });\r\n    if( username && password.toString() ){\r\n        let options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                \"email\" : username,\r\n                \"password\" : password\r\n            })\r\n        };\r\n        fetch('/api/login/', options)\r\n        .then( res => {\r\n            return res.json().then( data => ({ status: res.status, body: data }) )\r\n        })\r\n        .then( res => {\r\n            console.log(\"login_action: \", res);\r\n            if(res.status == 200){\r\n                var user = {\r\n                    username: username,\r\n                    token: res.body.token\r\n                };\r\n                console.log(res);\r\n                localStorage.setItem('user', JSON.stringify(user));\r\n                dispatcher.dispatch({\r\n                    type: \"LOGIN\",\r\n                    payload: {\r\n                        email: username,\r\n                        token: res.body.token\r\n                    }\r\n                });\r\n            }\r\n            else{\r\n                dispatcher.dispatch({\r\n                    type: \"APP_ERROR\",\r\n                    payload: {\r\n                        error: \"Incorrect Credentials\"\r\n                    }\r\n                });\r\n            }\r\n            dispatcher.dispatch({\r\n                type: \"LOADING_COMPLETE\"\r\n            });\r\n        }).catch((err) => {\r\n            console.log(\"error: \", err);\r\n            dispatcher.dispatch({\r\n                type: \"APP_ERROR\",\r\n                payload: {\r\n                    error: err\r\n                }\r\n            });\r\n            dispatcher.dispatch({\r\n                type: \"LOADING_COMPLETE\"\r\n            });\r\n        });\r\n    }\r\n    else{\r\n        dispatcher.dispatch({\r\n            type: \"APP_ERROR\",\r\n            payload: {\r\n                error: \"Username or Password cannot be empty\"\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport function logout(){\r\n    localStorage.clear();\r\n    dispatcher.dispatch({\r\n        type: \"LOGOUT\"\r\n    });\r\n}\r\n\r\nexport function resetApp(){\r\n    dispatcher.dispatch({\r\n        type: \"APP_RESET\"\r\n    });\r\n    dispatcher.dispatch({\r\n        type: \"RESET_POST\"\r\n    });\r\n}\r\n\r\nexport function resetPassword(password){\r\n    dispatcher.dispatch({\r\n        type: \"LOADING_START\"\r\n    });\r\n    let options = {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Authorization\": \"Bearer \" + AppDataStore.getToken()\r\n        },\r\n        body: JSON.stringify({\r\n            \"password\" : password\r\n        })\r\n    };\r\n    fetch('/api/reset-password/', options)\r\n    .then( res => {\r\n        return res.json().then( data => ({ status: res.status, body: data }) )\r\n    })\r\n    .then( res => {\r\n        if(res.status == 200){\r\n            console.log(res);\r\n            dispatcher.dispatch({\r\n                type: \"LOGOUT\"\r\n            });\r\n        }\r\n        else{\r\n            dispatcher.dispatch({\r\n                type: \"APP_ERROR\",\r\n                payload: {\r\n                    error: `Error occured: ${res.status}`\r\n                }\r\n            });\r\n        }\r\n        dispatcher.dispatch({\r\n            type: \"LOADING_COMPLETE\"\r\n        });\r\n    }).catch((err) => {\r\n        console.log(\"error: \", err);\r\n        dispatcher.dispatch({\r\n            type: \"APP_ERROR\",\r\n            payload: {\r\n                error: err\r\n            }\r\n        });\r\n        dispatcher.dispatch({\r\n            type: \"LOADING_COMPLETE\"\r\n        });\r\n    });\r\n}\r\n\r\nexport function newForm(form){\r\n    dispatcher.dispatch({\r\n        type: \"NEW_FORM\",\r\n        payload: {\r\n            formType: form\r\n        }\r\n    });\r\n}","import React, { Component } from 'react';\r\nimport './Login.css';\r\nimport icon from 'Assets/iconLogin.svg';\r\nimport { login } from '_actions/AppActions';\r\n\r\nclass Login extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            username: null,\r\n            password: null\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.doLogin = this.doLogin.bind(this);\r\n    }\r\n\r\n    handleChange(event){\r\n        this.setState({\r\n            [event.target.name]: event.target.value \r\n        });\r\n    }\r\n\r\n    doLogin(e){\r\n        e.preventDefault(); login(this.state.username, this.state.password) \r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"container\">\r\n                <form action=\"javascript:void(0)\" className=\"login-form align-center p-4 mx-auto\">\r\n                    <img src={icon} className=\"mx-auto d-block mt-3 mb-5 login-icon\"/>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"email\" className=\"form-control\" placeholder=\"Email Address\" name=\"username\" id=\"email\" value={ this.state.username } onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"password\" className=\"form-control\" placeholder=\"Password\" name=\"password\" id=\"password\" value={ this.state.password } onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <button type=\"submit\" className=\"btn btn-primary px-5 mt-3\" onClick={ (e) => this.doLogin(e) }> Login </button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './index.css';\r\nimport { logout } from '_actions/AppActions';\r\n\r\nfunction Header() {\r\n  return (\r\n    <header>\r\n      <div className=\"container-fluid mw-1500\">\r\n        <div className=\"row justify-content-between\">\r\n        <Link to=\"/\" className=\"logo text-center text-white\">\r\n            <img src=\"/images/logo.png\" alt=\"FindLaw\"/>\r\n          Rubrik Tool</Link>\r\n          <div className=\"nav-main-wrap pt-4 pb-1\">\r\n            <nav id=\"nav-main\" className=\"navbar navbar-expand-lg pl-0 pr-0\" role=\"navigation\">\r\n                <ul className=\"w-100 navbar-nav justify-content-between d-flex \">\r\n                  <li className=\"nav-item\"><Link className=\"nav-link\" to=\"/\">Dashboard</Link></li>\r\n                  {/* <li className=\"nav-item\"><a className=\"nav-link\" href=\"javascript:void(0)\">Settings</a></li> */}\r\n                  <li className=\"nav-item\"><a className=\"nav-link\" href=\"javascript:void(0)\" onClick = { logout }>Logout</a></li>\r\n                </ul>  \r\n            </nav>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import dispatcher from \"_dispatcher\";\r\nimport axios from 'axios';\r\nimport download from 'downloadjs';\r\nimport AppDataStore from '_store/AppDataStore';\r\n\r\nexport function newPost(formType){\r\n    dispatcher.dispatch({\r\n        type: \"NEW_POST_FORM\",\r\n        payload: {\r\n            postType: formType\r\n        }\r\n    });\r\n}  \r\n\r\nexport function updatePostData(category, id, value){\r\n    dispatcher.dispatch({\r\n        type: \"UPDATE_POST\",\r\n        payload: {\r\n            category: category,\r\n            id: id,\r\n            value: value\r\n        }\r\n    });\r\n}\r\n\r\nexport function submitPost(obj, postType){\r\n    dispatcher.dispatch({\r\n        type: \"LOADING_START\"\r\n    });\r\n    let url = \"/api/posts/\" + postType.toLowerCase();\r\n    let options = {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Authorization\": \"Bearer \" + AppDataStore.getToken()\r\n        },\r\n        body: JSON.stringify( obj )\r\n    };\r\n    fetch( url, options )\r\n    .then( res => res.json() )\r\n    .then( response =>{\r\n         console.log('Success:', JSON.stringify(response));\r\n         if(response.errorCode){\r\n            dispatcher.dispatch({\r\n                type: \"APP_ERROR\",\r\n                payload: {\r\n                    error: JSON.stringify(response.errorCode)\r\n                }\r\n            });\r\n         }\r\n         else{\r\n            dispatcher.dispatch({\r\n                type: \"APP_SUCCESS\",\r\n                payload: {\r\n                    success: true\r\n                }\r\n            });\r\n         }\r\n        dispatcher.dispatch({\r\n            type: \"LOADING_COMPLETE\"\r\n        });\r\n    } )\r\n    .catch( error => {\r\n        console.error('Error:', error);\r\n        dispatcher.dispatch({\r\n            type: \"APP_ERROR\",\r\n            payload: {\r\n                error: error\r\n            }\r\n        });\r\n        dispatcher.dispatch({\r\n            type: \"LOADING_COMPLETE\"\r\n        });\r\n    } );\r\n}\r\n\r\n\r\nexport function forceSubmitPostOverride(obj, postType){\r\n    dispatcher.dispatch({\r\n        type: \"LOADING_START\"\r\n    });\r\n    let url = `/api/post/${postType.toLowerCase()}/${obj.postInfo.requestId}`;\r\n    let options = {\r\n        method: \"PUT\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Authorization\": \"Bearer \" + AppDataStore.getToken()\r\n        },\r\n        body: JSON.stringify( obj )\r\n    };\r\n    fetch( url, options )\r\n    .then( res => res.json() )\r\n    .then( response =>{\r\n         console.log('Success:', JSON.stringify(response));\r\n         if(response.errorCode){\r\n            dispatcher.dispatch({\r\n                type: \"APP_ERROR\",\r\n                payload: {\r\n                    error: JSON.stringify(response.errorCode)\r\n                }\r\n            });\r\n         }\r\n         else{\r\n            dispatcher.dispatch({\r\n                type: \"APP_SUCCESS\",\r\n                payload: {\r\n                    success: true\r\n                }\r\n            });\r\n         }\r\n        dispatcher.dispatch({\r\n            type: \"LOADING_COMPLETE\"\r\n        });\r\n    } )\r\n    .catch( error => {\r\n        console.error('Error:', error);\r\n        dispatcher.dispatch({\r\n            type: \"APP_ERROR\",\r\n            payload: {\r\n                error: error\r\n            }\r\n        });\r\n        dispatcher.dispatch({\r\n            type: \"LOADING_COMPLETE\"\r\n        });\r\n    } );\r\n}\r\n\r\n\r\nexport function exportPostData(postType, requestId){\r\n    dispatcher.dispatch({\r\n        type: \"LOADING_START\"\r\n    });\r\n    let url = `/api/export/${postType}/${requestId}`;\r\n    axios( {\r\n        url: url,\r\n        method: 'GET',\r\n        responseType: 'blob',\r\n        headers: {\r\n            \"Authorization\": \"Bearer \" + AppDataStore.getToken()\r\n        }\r\n    }).\r\n    then( (response) => {\r\n        if( response.status == 200 ){\r\n            download( new Blob([response.data]), `Report-${requestId}.xlsx`, \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\" )\r\n        }\r\n        dispatcher.dispatch({\r\n            type: \"LOADING_COMPLETE\"\r\n        });\r\n    } )\r\n    .catch( (err) => {\r\n        if( err.response.status == 400 ){\r\n            dispatcher.dispatch({\r\n                type: \"APP_ERROR\",\r\n                payload: {\r\n                    error: \"Are you sure you entered the corrrect requestID?\"\r\n                }\r\n            });\r\n        }\r\n        else{\r\n            dispatcher.dispatch({\r\n                type: \"APP_ERROR\",\r\n                payload: {\r\n                    error: err\r\n                }\r\n            });\r\n        }\r\n        dispatcher.dispatch({\r\n            type: \"LOADING_COMPLETE\"\r\n        });\r\n    } )\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '_containers/Dashboard/Dashboard.css';\r\nimport Header from '_components/Header';\r\nimport { newPost } from '_actions/PostActions';\r\n\r\nclass Dashboard extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleClick(formType){\r\n    newPost(formType);\r\n    this.props.history.push(\"/initial-details\");\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <div className=\"container\">\r\n          <article id=\"main-col\" className=\"mt-5 pt-5\">\r\n            <div className=\"boxes d-flex justify-content-between w-75 mx-auto flex-wrap\">\r\n              <div className=\"card mx-5 mb-5\">\r\n                <div className=\"card-body\">\r\n                  <h5 className=\"card-title\">EBP Form</h5>\r\n                  <p className=\"card-text\">Choose this to rate a new EBP blog</p>\r\n                  <a href=\"javascript:void(0)\" onClick={ () => { this.handleClick(\"EBP\"); } }>Create New</a>\r\n                </div>\r\n              </div>\r\n              <div className=\"card mx-5 mb-5\">\r\n                <div className=\"card-body\">\r\n                  <h5 className=\"card-title\">TBP Form</h5>\r\n                  <p className=\"card-text\">Choose this to rate a new EBP blog</p>\r\n                  <a href=\"javascript:void(0)\" onClick={ () => { this.handleClick(\"TBP\"); } }>Create New</a>\r\n                </div>\r\n              </div>\r\n              <div className=\"card mx-5\">\r\n                <div className=\"card-body\">\r\n                  <h5 className=\"card-title\">Excel Export</h5>\r\n                  <p className=\"card-text\">Choose to export an existing entry</p>\r\n                  <Link to = \"/export\" >Create Export</Link>\r\n                </div>\r\n              </div>\r\n              <div className=\"card mx-5\">\r\n                <div className=\"card-body\">\r\n                  <h5 className=\"card-title\">Report</h5>\r\n                  <p className=\"card-text\">Choose this to see a data report</p>\r\n                  <Link to = \"/report\" >Get Report</Link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </article>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n","import React, {Component} from 'react';\r\nimport './Settings.css';\r\n\r\nclass Settings extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"bio login-form align-center p-4 mx-auto\">\r\n                    <img src=\"http://localhost:8080/public/default.svg\" alt=\"User Avatar\" className=\"avatar\" />\r\n                    <h5 className=\"name\">Winston Jude</h5>\r\n                    <p>\r\n                        <span className=\"email\">winston@test.com</span>\r\n                        <span className=\"access\">User</span>\r\n                    </p>\r\n                </div>\r\n                <form action=\"javascript:void(0)\" className=\"update-form login-form align-center p-4 mx-auto\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"Name\">Name</label>\r\n                        <input type=\"text\" className=\"form-control\" name=\"Name\"/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"Email\">Email</label>\r\n                        <input type=\"email\" className=\"form-control\" name=\"Email\"/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <button type=\"button\" className=\"btn btn-primary px-5 mt-3\"> Update </button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Settings;","import React, { Component } from 'react';\r\nimport './Login.css';\r\nimport icon from 'Assets/iconLogin.svg';\r\nimport { resetPassword } from '_actions/AppActions';\r\n\r\nclass Reset extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            newPassword: null,\r\n            confirmPassword: null,\r\n            valid: false\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.validateData = this.validateData.bind(this);\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({ [e.target.id]: e.target.value }, () => {\r\n            this.validateData();\r\n        });\r\n    }\r\n\r\n    validateData(){\r\n        if(this.state.newPassword === this.state.confirmPassword){\r\n            this.setState({\r\n              valid: true\r\n            });\r\n        }\r\n        else{\r\n          this.setState({\r\n            valid: false\r\n          });\r\n        }\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        if(this.state.valid)\r\n            resetPassword(this.state.newPassword);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"container\">\r\n                <form onSubmit={ e => { e.preventDefault() } } className=\"login-signup-form align-center p-4 mx-auto\">\r\n                    <img src={icon} alt=\"Avatar\" className=\"mx-auto d-block mt-3 mb-5 avatar\"/>\r\n                    {/* <div className=\"form-group\">\r\n                        <input type=\"name\" className=\"form-control\" placeholder=\"Name\" name=\"Email\" id=\"email\"/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"email\" className=\"form-control\" placeholder=\"Email Address\" name=\"Email\" id=\"email\"/>\r\n                    </div> */}\r\n                    {\r\n                        this.state.valid? \r\n                        <div className=\"alert alert-primary\" role=\"alert\">\r\n                        Click Reset Password to reset. Please note: You will be logged out of the current session.\r\n                        </div> : \r\n                        <div className=\"alert alert-danger\" role=\"alert\">\r\n                        Both passwords should match\r\n                        </div>\r\n                    }\r\n                    <div className=\"form-group\">\r\n                        <input type=\"password\" className=\"form-control\" placeholder=\"New Password\" name=\"Password\" id=\"newPassword\"  onChange = { this.handleChange }  value = {this.state.newPassword} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"password\" className=\"form-control\" placeholder=\"Confirm password\" name=\"Password\" id=\"confirmPassword\"  onChange = { this.handleChange } value = {this.state.confirmPassword} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <button type=\"button\" className=\"btn btn-primary px-5 mt-3\" onClick = { this.handleSubmit }> Reset Password </button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Reset;","export default function reCalculate(post, postType){\r\n    console.log(\"test\");\r\n    if(postType == \"EBP\")\r\n        reCalculateEBP(post);\r\n    if(postType == \"TBP\")\r\n        reCalculateTBP(post);\r\n}\r\n\r\n\r\nfunction reCalculateEBP(post){\r\n    post.plagiarism.total = post.plagiarism.copyscape + post.plagiarism.uniqueness;\r\n    post.spellcheck.total = post.spellcheck.basic + post.spellcheck.vendorInfo + post.spellcheck.wordUsage + post.spellcheck.grammar;\r\n    post.writingProficiency.total = post.writingProficiency.pov + post.writingProficiency.grammar + post.writingProficiency.readability;\r\n    post.topic.total = post.topic.appropriateness + post.topic.date;\r\n    post.focus.total = post.focus.topic + post.focus.headline + post.focus.adverseness + post.focus.clientGoals + post.focus.headers;\r\n    post.performance.total = post.performance.linkText + post.performance.linkMatchesHeaders;\r\n    post.compliance.total = post.compliance.words + post.compliance.isEthical + post.compliance.noMisleadingImpressions + post.compliance.noFactualInaccuracies;\r\n    post.total = post.plagiarism.total + post.spellcheck.total + post.writingProficiency.total + post.topic.total + post.focus.total + post.performance.total + post.compliance.total + post.tone + post.source;\r\n    post.score = Number.parseFloat(post.total* 100/31).toFixed(2);\r\n    if(  checkCompulsoryValues(post.plagiarism.copyscape, post.plagiarism.uniqueness, post.spellcheck.basic, post.spellcheck.vendorInfo, post.spellcheck.wordUsage, post.spellcheck.grammar, post.topic.appropriateness, post.compliance.noFactualInaccuracies )) {\r\n        post.status = \"Did Not Achieve\";\r\n    }\r\n    else if(post.score > 90){\r\n        post.status = \"Achieved\";\r\n    }\r\n    else if(post.score >= 72 && post.score < 90){\r\n        post.status = \"Partially Achieved\";\r\n    }\r\n    else if(post.score < 72){\r\n        post.status = \"Did Not Achieve\";\r\n    }\r\n}\r\n\r\nfunction reCalculateTBP(post){\r\n    post.plagiarism.total = post.plagiarism.copyscape + post.plagiarism.uniqueness;\r\n    post.spellcheck.total = post.spellcheck.basic + post.spellcheck.vendorInfo + post.spellcheck.wordUsage + post.spellcheck.grammar;\r\n    post.writingProficiency.total = post.writingProficiency.pov + post.writingProficiency.grammar + post.writingProficiency.readability;\r\n    post.topic.total = post.topic.appropriateness + post.topic.date;\r\n    post.focus.total = post.focus.topic + post.focus.headline + post.focus.appropriateness + post.focus.clientPracGoals;\r\n    post.performance.total = post.performance.linkText + post.performance.linkMatchesHeaders;\r\n    post.compliance.total = post.compliance.words + post.compliance.isEthical + post.compliance.noMisleadingImpressions + post.compliance.noFactualInaccuracies;\r\n    post.total = post.plagiarism.total + post.spellcheck.total + post.writingProficiency.total + post.topic.total + post.focus.total + post.performance.total + post.compliance.total + post.source;\r\n    post.score = Number.parseFloat(post.total*100/29).toFixed(2);\r\n    let compulsoryValuesFail = checkCompulsoryValues(post.plagiarism.copyscape, post.plagiarism.uniqueness, post.spellcheck.basic, post.spellcheck.vendorInfo, post.spellcheck.wordUsage, post.spellcheck.grammar, post.topic.appropriateness, post.compliance.noFactualInaccuracies );\r\n    if( compulsoryValuesFail ){\r\n        post.status = \"Did Not Achieve\";\r\n    }\r\n    else if(post.score > 90){\r\n        post.status = \"Achieved\";\r\n    }\r\n    else if(post.score >= 72 && post.score < 90){\r\n        post.status = \"Partially Achieved\";\r\n    }\r\n    else if(post.score < 72){\r\n        post.status = \"Did Not Achieve\";\r\n    }\r\n}\r\n\r\nfunction checkCompulsoryValues(...prop){\r\n    for(let i = 0; i < prop.length; i++){\r\n        if(!prop[i])\r\n            return true;\r\n    }\r\n    return false;\r\n}","import { EventEmitter } from 'events';\r\nimport dispatcher from '_dispatcher';\r\nimport reCalculate from './ReCalculate';\r\n\r\nclass Store extends EventEmitter {\r\n    constructor(props) {\r\n        super(props);\r\n        this.post = null;\r\n        this.postType = null;\r\n        this.on('change', () => { this.reCalculate( this.postType ) } );\r\n    }\r\n\r\n    getStandaloneQuestionStatus(id){\r\n        return this.post[id];\r\n    }\r\n\r\n    getCategorizedQuestionStatus(category, id){\r\n        return this.post[category][id];\r\n    }\r\n\r\n    getMultiChoiceQuestionStatus(category, id){\r\n        if(category){\r\n            return this.post[category][id];\r\n        }\r\n        else{\r\n            return this.post[id];\r\n        }\r\n    }\r\n    \r\n    getPostData() {\r\n        return this.post;\r\n    }\r\n\r\n    resetPostData(){\r\n        this.postType = null;\r\n        this.post = null;\r\n    }\r\n\r\n    newPostForm(formType){\r\n        this.postType = formType;\r\n        if(formType == \"EBP\"){\r\n            this.post = {\r\n                postInfo: {\r\n                    vendorName: null,\r\n                    clientName: null,\r\n                    requestId: null,\r\n                    postTitle: null,\r\n                    postDate: new Date(),\r\n                    userId: 1\r\n                },\r\n                plagiarism: {\r\n                    copyscape: true,\r\n                    uniqueness: true, \r\n                    total: 2 \r\n                }, \r\n                spellcheck: {\r\n                    basic: true, \r\n                    vendorInfo: true,\r\n                    wordUsage: true,\r\n                    grammar: true,\r\n                    total: 2\r\n                },\r\n                writingProficiency: {\r\n                    pov: true,\r\n                    grammar: true,\r\n                    readability: true,\r\n                    total: 3\r\n                },\r\n                topic: {\r\n                    appropriateness: 2,\r\n                    date: true,\r\n                    total: 3\r\n                },\r\n                tone: true,\r\n                focus: {\r\n                    topic: 2,\r\n                    headline: 2,\r\n                    adverseness: true,\r\n                    clientGoals: true,\r\n                    headers: 2,\r\n                    total: 8\r\n                },\r\n                source: 2,\r\n                performance: {\r\n                    linkText: 2,\r\n                    linkMatchesHeaders: 2,\r\n                    total: 4\r\n                },\r\n                compliance:{\r\n                    words: true,\r\n                    isEthical: true,\r\n                    noMisleadingImpressions: true,\r\n                    noFactualInaccuracies: true,\r\n                    total: 4\r\n                },\r\n                total: 31,\r\n                score: 31,\r\n                status: \"Achieved\"\r\n            }\r\n        }\r\n        if(formType == \"TBP\"){\r\n            this.post = {\r\n                postInfo: {\r\n                    vendorName: null,\r\n                    clientName: null,\r\n                    requestId: null,\r\n                    postTitle: null,\r\n                    postDate: new Date(),\r\n                    userId: 1\r\n                },\r\n                plagiarism: {\r\n                    copyscape: true,\r\n                    uniqueness: true, \r\n                    total: 2 \r\n                }, \r\n                spellcheck: {\r\n                    basic: true, \r\n                    vendorInfo: true,\r\n                    wordUsage: true,\r\n                    grammar: true,\r\n                    total: 4\r\n                },\r\n                writingProficiency: {\r\n                    pov: true,\r\n                    grammar: true,\r\n                    readability: true,\r\n                    total: 3\r\n                },\r\n                topic: {\r\n                    appropriateness: 2,\r\n                    date: true,\r\n                    total: 3\r\n                },\r\n                focus: {\r\n                    topic: 2,\r\n                    headline: 2,\r\n                    appropriateness: true,\r\n                    clientPracGoals: 2,\r\n                    total: 7\r\n                },\r\n                source: 2,\r\n                performance: {\r\n                    linkText: 2,\r\n                    linkMatchesHeaders: 2,\r\n                    total: 4\r\n                },\r\n                compliance:{\r\n                    words: true,\r\n                    isEthical: true,\r\n                    noMisleadingImpressions: true,\r\n                    noFactualInaccuracies: true,\r\n                    total: 4\r\n                },\r\n                total: 29,\r\n                score: 29,\r\n                status: \"Achieved\"\r\n            }\r\n        }\r\n    }\r\n\r\n    reCalculate(postType){\r\n        if(!this.post){\r\n            return false;\r\n        }\r\n        else{\r\n            reCalculate(this.post, postType);\r\n        }\r\n    }\r\n\r\n    handleActions(action) {\r\n        switch(action.type) {\r\n            case \"UPDATE_POST\": {\r\n                console.log(action);\r\n                if(action.payload.category){\r\n                    this.post[action.payload.category][action.payload.id] = action.payload.value;\r\n                }\r\n                else{\r\n                    this.post[action.payload.id] = action.payload.value;\r\n                }\r\n                this.emit(\"change\");\r\n                break;\r\n            }\r\n\r\n            case \"NEW_POST_FORM\": {\r\n                console.log(action.payload.postType);\r\n                this.newPostForm(action.payload.postType);\r\n                this.emit(\"change\");\r\n                break;\r\n            }\r\n\r\n            case \"RESET_POST\": {\r\n                this.resetPostData();\r\n                this.emit(\"change\");\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nconst newStore = new Store;\r\ndispatcher.register(newStore.handleActions.bind(newStore));\r\n\r\nexport default newStore;","import React, { Component } from 'react';\r\nimport Header from '_components/Header';\r\nimport PostDataStore from '_store/PostDataStore';\r\nimport AppDataStore from '_store/AppDataStore';\r\nimport { updatePostData } from '_actions/PostActions';\r\nimport DatePicker from 'react-date-picker';\r\n\r\nclass InitialDetails extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = PostDataStore.getPostData();\r\n  }\r\n\r\n  componentWillMount(){\r\n    PostDataStore.reCalculate();\r\n    PostDataStore.on('change', this.getPostData);\r\n    this.postType = AppDataStore.getCurrentFormType();\r\n    let date = localStorage.getItem('defaultDate');\r\n    if( date )\r\n      updatePostData( \"postInfo\", \"postDate\",  new Date(date) );\r\n  }\r\n \r\n  componentWillUnmount(){\r\n      PostDataStore.removeListener('change', this.getPostData);\r\n  }\r\n\r\n  getPostData = () => {\r\n    this.setState(PostDataStore.getPostData());\r\n  }\r\n\r\n  formSubmit = (event) => { \r\n    event.preventDefault();\r\n    if(this.state.valid){\r\n      this.props.history.push('/' + this.postType.toLowerCase())\r\n    }\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    updatePostData(\"postInfo\", event.target.name,  event.target.value );\r\n  }\r\n\r\n  validateData = () => {\r\n      if(this.state.postInfo.vendorName && this.state.postInfo.clientName && this.state.postInfo.requestId && this.state.postInfo.postTitle && this.state.postInfo.postDate){\r\n          this.setState({\r\n            valid: true\r\n          });\r\n      }\r\n      else{\r\n        this.setState({\r\n          valid: false\r\n        });\r\n      }\r\n  }\r\n\r\n  handleDate = date => {\r\n    date.setHours(12); // Fix for reporting error\r\n    updatePostData( \"postInfo\", \"postDate\",  date );\r\n    localStorage.setItem( 'defaultDate', date );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <div className=\"container-fluid mw-1500\">\r\n          <div className=\"row d-flex justify-content-between\">\r\n            <article id=\"main-col\" className=\"mt-5 pt-5\">\r\n              <h2>Post Details:</h2>\r\n              {\r\n                this.state.valid? \r\n                <div className=\"alert alert-primary\" role=\"alert\">\r\n                All fields have been filled, click next to begin\r\n                </div> : \r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                  Please ensure that all fields are filled\r\n                </div>\r\n              }\r\n              <form onChange={this.validateData}>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"formGroupExampleInput\">Vendor Name:</label>\r\n                  <input type=\"text\" name=\"vendorName\" onChange={ this.handleChange } className=\"form-control\" id=\"formGroupExampleInput\" value={this.state.vendorName} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"formGroupExampleInput\">Date of Post:</label>\r\n                  <DatePicker onChange={this.handleDate} value={this.state.postInfo.postDate}/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"formGroupExampleInput\">Client Name:</label>\r\n                  <input name=\"clientName\"  onChange={ this.handleChange }  type=\"text\" className=\"form-control\" id=\"formGroupExampleInput\"  value={this.state.clientName} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"formGroupExampleInput\">Request ID:</label>\r\n                  <input name=\"requestId\"  onChange={ this.handleChange }  type=\"text\" className=\"form-control\" id=\"formGroupExampleInput\"  value={this.state.requestId} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"formGroupExampleInput\">Post Title:</label>\r\n                  <input name=\"postTitle\"  onChange={ this.handleChange }  type=\"text\" className=\"form-control\" id=\"formGroupExampleInput\"  value={this.state.postTitle} />\r\n                </div>\r\n                <button type=\"button\" onClick={ this.formSubmit } className=\"btn btn-primary mt-5 mb-5\">Next</button>\r\n              </form>\r\n            </article>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\t    \r\n    );\r\n  }\r\n}\r\n\r\nexport default InitialDetails;\r\n","import React from 'react';\r\nimport {Component} from 'react';\r\nimport './index.css';\r\nimport PostDataStore from '_store/PostDataStore';\r\n\r\nclass Sidebar extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {}\r\n  }\r\n  \r\n  componentWillMount(){\r\n    this.setState(PostDataStore.getPostData());\r\n  }\r\n\r\n  render() {\r\n    return (\r\n\t    <aside>\r\n          <div className=\"section-1\">\r\n            <h4 className=\"section-title pl-2 mt-5 mb-3\">\r\n              Overview\r\n            </h4>\r\n            <div className=\"d-flex justify-content-between\">\r\n              <div className=\"pl-2 pr-2\">\r\n                <ul className=\"project-dates font-sm\">\r\n                  <li>Vendor Name: <span>{ this.state.postInfo.vendorName }</span></li>\r\n                  <li>Date of Post: <span>{ this.state.postInfo.postDate.toString() }</span></li>\r\n                  <li>Client Name: <span>{ this.state.postInfo.clientName }</span></li>\r\n                  <li>Request ID: <span>{ this.state.postInfo.requestId }</span></li>\r\n                  <li>Post Title: <span>{ this.state.postInfo.postTitle }</span></li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"section-2\">\r\n            <h4 className=\"section-title pl-2 mt-5 mb-3\">\r\n              Scale Definitions for Scored Criteria\r\n            </h4>\r\n            <div className=\"section-details-1\">\r\n              <div className=\"d-flex justify-content-between\">\r\n                <div className=\"pl-2 pr-2\">\r\n                  <ul className=\"project-dates font-sm\">\r\n                    <li>2 : <span>Strong example of blog content</span></li>\r\n                    <li>1 : <span>Meets best practices</span></li>\r\n                    <li>0 : <span>Does not meet best practices</span></li>\r\n                    <li> <br/> </li>\r\n                    <li>Yes : <span>Criteria met - 1 point</span></li>\r\n                    <li>No : <span>Criteria not met - 0 points</span></li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"section-2\">\r\n            <h4 className=\"section-title pl-2 mt-5 mb-3\">\r\n              Scoring\r\n            </h4>\r\n            <div className=\"section-details-1\">\r\n              <div className=\"d-flex justify-content-between\">\r\n                <div className=\"pl-2 pr-2\">\r\n                  <ul className=\"project-dates font-sm\">\r\n                    <li>90% or higher : <span>Achieved</span></li>\r\n                    <li>72% - 89.99% : <span>Partially Achieved</span></li>\r\n                    <li>71.99% or lower : <span>Did Not Achieve</span></li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </aside>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Sidebar;\r\n","import React, { Component } from 'react';\r\n\r\nfunction StandaloneQuestion({ id, handler, val, warning, children }) {\r\n    return (\r\n        <label className=\"labelq clearfix\"> \r\n            <input checked={val} onChange={ \r\n                () => { \r\n                    handler(id, !val) \r\n                } \r\n            } className=\"labelq__checkbox\" type=\"checkbox\" />\r\n            <span className=\"labelq__text\">\r\n            \r\n                <span className=\"labelq__check\">\r\n                    <i className=\"fa fa-check icon\"></i>\r\n                    <i className=\"fa fa-times icon\"></i>\r\n                </span>\r\n            </span>\r\n            <span className=\"labelq__questionText\">{ children } { warning? <span className=\"text-danger\"> { warning } </span> : \"\" }</span>\r\n        </label>\r\n    );\r\n}\r\n\r\nexport default StandaloneQuestion;\r\n","import React, { Component } from 'react';\r\nimport { updatePostData_categorized } from '_actions/PostActions';\r\nimport PostDataStore from '_store/PostDataStore';\r\n\r\nclass CategorizedQuestion extends Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <label className=\"labelq clearfix\"> \r\n                <input checked={this.props.val} onChange={ \r\n                    () => { \r\n                        this.props.handler( this.props.category, this.props.id, !this.props.val ) \r\n                    } \r\n                } className=\"labelq__checkbox\" type=\"checkbox\" />\r\n                <span className=\"labelq__text\">\r\n                \r\n                    <span className=\"labelq__check\">\r\n                        <i className=\"fa fa-check icon\"></i>\r\n                        <i className=\"fa fa-times icon\"></i>\r\n                    </span>\r\n                </span>\r\n                <span className=\"labelq__questionText\">{this.props.children} { this.props.warning? <span className=\"text-danger\"> { this.props.warning } </span> : \"\" } </span>\r\n            </label>\r\n        );\r\n    }\r\n};\r\n\r\n\r\nexport default CategorizedQuestion;\r\n","import React, { Component } from 'react';\r\n\r\nfunction MultiChoiceQuestion({ category, id, val, handler, warning, children }) {\r\n    return (\r\n        <div className= \"customradios clearfix\">\r\n            <div className=\"custom-radios clearfix\">\r\n                <div>\r\n                    <input type=\"radio\" id={ id + \"_radio-0\"} name={id} value=\"0\" checked={val === 0} onChange={ (e) => {handler(category, id, Number(e.target.value))} }/>\r\n                    <label htmlFor={id + \"_radio-0\"}> \r\n                        <span>0</span>\r\n                    </label>\r\n                </div>\r\n\r\n                <div>\r\n                    <input type=\"radio\" id={ id + \"radio-1\" } name={id} value=\"1\" checked={val === 1} onChange={ (e) => {handler(category, id, Number(e.target.value))} }/>\r\n                    <label htmlFor={ id + \"radio-1\" }>\r\n                        <span>1</span>\r\n                    </label>\r\n                </div>\r\n\r\n                <div>\r\n                    <input type=\"radio\" id={ id + \"radio-2\" } name={id} value=\"2\" checked={val === 2} onChange={ (e) => {handler(category, id, Number(e.target.value))} }/>\r\n                    <label htmlFor={ id + \"radio-2\" }>\r\n                        <span>2</span>\r\n                    </label>\r\n                </div>\r\n            </div>\r\n            <span className=\"custom-radios__questionText\">{ children } { warning? <span className=\"text-danger\"> { warning } </span> : \"\" }</span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MultiChoiceQuestion;\r\n","import React from 'react';\r\nimport './StatusBar.css';\r\n\r\nconst showStatus = (status) => {\r\n    switch(status) {\r\n        case \"Achieved\":\r\n            return(<span className=\"d-block status p-4 text-success\">Achieved</span>)\r\n            break;\r\n        \r\n        case \"Partially Achieved\":\r\n            return(<span className=\"d-block status p-4 text-warning\">Partially Achieved</span>)\r\n            break;\r\n\r\n        case \"Did Not Achieve\":\r\n            return(<span className=\"d-block status p-4 text-danger\">Did not Achieve</span>)\r\n            break\r\n        default:\r\n            return(<span className=\"d-block status p-4 text-success\">Achieved</span>)\r\n            break;\r\n    }\r\n};\r\n\r\nfunction StatusBar ({ status, total, totalPossiblePoints, totalPercent }) {\r\n    return (\r\n        <div className=\"statusbar mb-5 mx-auto d-flex justify-content-between\">\r\n            <div className=\"score-points p-4\">\r\n                { total }/{ totalPossiblePoints }\r\n            </div>\r\n            <div className=\"score-percent p-4\">\r\n                {totalPercent} %\r\n            </div>\r\n            <p>\r\n                { \r\n                    showStatus(status)\r\n                }\r\n            </p>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default StatusBar;","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Header from '_components/Header';\r\nimport Sidebar from '_components/Sidebar';\r\nimport StandaloneQuestion from '_components/StandaloneQuestion';\r\nimport CategorizedQuestion from '_components/CategorizedQuestion';\r\nimport MultiChoiceQuestion from '_components/MultiChoiceQuestion';\r\nimport StatusBar from '_components/StatusBar';\r\nimport PostDataStore from '_store/PostDataStore';\r\nimport AppDataStore from '_store/AppDataStore';\r\nimport { submitPost, updatePostData, forceSubmitPostOverride } from '_actions/PostActions';\r\n\r\nimport '_components/index.css';\r\n\r\nclass Content extends Component { \r\n  constructor(props){\r\n    super(props);\r\n    this.formSubmit = this.formSubmit.bind(this);\r\n    this.getPostData = this.getPostData.bind(this);\r\n    this.handleChangeSingle = this.handleChangeSingle.bind(this);\r\n    this.handleChangeCategorized = this.handleChangeCategorized.bind(this);\r\n    this.handleOverrideChange = this.handleOverrideChange.bind(this);\r\n    this.formFinalSubmit = this.formFinalSubmit.bind(this);\r\n  }\r\n\r\n  componentWillMount(){\r\n    PostDataStore.reCalculate();\r\n    PostDataStore.on(\"change\", this.getPostData);\r\n    this.getPostData();\r\n    this.setState({confirmSubmission: false, override: false });\r\n  }\r\n\r\n  componentWillUnmount(){\r\n      PostDataStore.removeListener('change', this.getPostData);\r\n  }\r\n\r\n  getPostData(){\r\n    this.setState(PostDataStore.getPostData());\r\n  }\r\n\r\n  formSubmit(event){ \r\n    event.preventDefault();\r\n    this.setState({confirmSubmission: true});\r\n  }\r\n  \r\n  formFinalSubmit(override){\r\n    if(override){\r\n      forceSubmitPostOverride(PostDataStore.getPostData(), AppDataStore.getCurrentFormType());\r\n    }\r\n    else{\r\n      submitPost(PostDataStore.getPostData(), AppDataStore.getCurrentFormType());\r\n    }\r\n  }\r\n\r\n  handleChangeSingle(id, value){\r\n    updatePostData( null, id, value );\r\n  }\r\n\r\n  handleChangeCategorized(cat, id, value){\r\n      updatePostData( cat, id, value );\r\n  }\r\n\r\n  handleOverrideChange(){\r\n      this.setState({\r\n        override: !this.state.override\r\n      });\r\n  }\r\n\r\n  render() {\r\n    let confirmStatus = \"confirm-submission d-none\";\r\n    if(this.state.confirmSubmission){\r\n      confirmStatus = \"confirm-submission\";\r\n    }\r\n\r\n    if(!this.state.postInfo){\r\n      return <Redirect to='/' />\r\n    }\r\n    \r\n    return (\r\n      <div>\r\n        <Header />\r\n        <div className={confirmStatus}>\r\n            <div className=\"confirm-box p-4\">\r\n              <div className=\"form-group\">\r\n                <p>Are you sure you want to submit these changes?</p>\r\n                <p><span>Total: </span> <strong>{ this.state.total }/31</strong></p>\r\n                <p><span>Score: </span> <strong>{ this.state.score } %</strong></p>\r\n                <p><span>Status: </span> <strong>{ this.state.status }</strong></p>\r\n                <button onClick={ ()=>{ this.formFinalSubmit(this.state.override) } } className=\"btn btn-primary mr-2\">Yes</button>\r\n                <button onClick={ () => { this.setState( { confirmSubmission: false } ) } } className=\"btn btn-danger\">No</button>\r\n                <div class=\"form-check mt-3\">\r\n                  <input class=\"form-check-input mt-2\" type=\"checkbox\" checked={this.state.override} onChange={this.handleOverrideChange} id=\"override\" />\r\n                  <label class=\"form-check-label\" for=\"override\">\r\n                    Overwrite post instead of adding\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"container-fluid mw-1500\">\r\n          <div className=\"row d-flex justify-content-between\">\r\n            <article id=\"main-col\" className=\"mt-5 pt-5\">\r\n              <StatusBar total={this.state.total} totalPercent={this.state.score} status={this.state.status} totalPossiblePoints={31}></StatusBar>\r\n              <form>\r\n                <h2>Plagiarism/Duplicate Content</h2>\r\n                <CategorizedQuestion category=\"plagiarism\" id=\"copyscape\" handler={ this.handleChangeCategorized } val={ this.state.plagiarism.copyscape }  warning=\"A 'no' to this question results in automatic failure to achieve, a JIRA ticket should be filed and the blog post should be taken down immediately.\">Is the content free of plagiarism/duplicate content based on a Copyscape search?</CategorizedQuestion>\r\n                <CategorizedQuestion category=\"plagiarism\" id=\"uniqueness\" handler={ this.handleChangeCategorized } val={ this.state.plagiarism.uniqueness }>Is the topic or source particularly unique as compared to other articles/blog posts in the practice area? Topic and content should be unique as compared to the recent posts on the main blog landing page.</CategorizedQuestion>\r\n                \r\n                <h2>Basic Spell Check and Review</h2>\r\n                <CategorizedQuestion category=\"spellcheck\" id=\"basic\" handler={ this.handleChangeCategorized } val={ this.state.spellcheck.basic }>Does the post pass a basic Word spell check?</CategorizedQuestion>\r\n                <CategorizedQuestion category=\"spellcheck\" id=\"vendorInfo\" handler={ this.handleChangeCategorized } val={ this.state.spellcheck.vendorInfo }>If used in the blog post, are the firm name and geography correct? (Based on the information available to the vendors.)</CategorizedQuestion>\r\n                <CategorizedQuestion category=\"spellcheck\" id=\"wordUsage\" handler={ this.handleChangeCategorized } val={ this.state.spellcheck.wordUsage }>Are all correctly spelled words used correctly? (Example: trial instead of trail)</CategorizedQuestion>\r\n                <CategorizedQuestion category=\"spellcheck\" id=\"grammar\" handler={ this.handleChangeCategorized } val={ this.state.spellcheck.grammar }>Is the content free from major grammar errors? (Examples include missing words that affect the readability or meaning of a sentence, glaringly incorrect punctuation, etc.)</CategorizedQuestion>\r\n                \r\n                <h2>Writing Proficiency</h2>\r\n                <CategorizedQuestion category=\"writingProficiency\" id=\"pov\" handler={ this.handleChangeCategorized } val={ this.state.writingProficiency.pov }>Is the point of view consistent?</CategorizedQuestion>\r\n                <CategorizedQuestion category=\"writingProficiency\" id=\"grammar\" handler={ this.handleChangeCategorized } val={ this.state.writingProficiency.grammar }>Is the content free of grammar minor grammar errors? (Examples include agreement errors, capitalization errors, AP Style errors.)</CategorizedQuestion>\r\n                <CategorizedQuestion category=\"writingProficiency\" id=\"readability\" handler={ this.handleChangeCategorized } val={ this.state.writingProficiency.readability }>Does the content read well? For example: Is it free from redundancy, unnecessary repetition, inaccuracies and gaps in logic?</CategorizedQuestion>\r\n                \r\n                <h2>Topic</h2>\r\n                <MultiChoiceQuestion category=\"topic\" id=\"appropriateness\" handler={ this.handleChangeCategorized } val={ this.state.topic.appropriateness }  warning=\"A '0' results in an automatic failure. A JIRA ticket should be filed and the post should be taken down immediately.\">Did the writer choose an appropriate topic for the client's practice and location (e.g., client practices Los Angeles family law and topic is about California child custody)? Did the writer take provided notes on topic selection into consideration?</MultiChoiceQuestion>\r\n                <CategorizedQuestion category=\"topic\" id=\"date\" handler={ this.handleChangeCategorized } val={ this.state.topic.date}>Is the subject of the post appropriate given the date of its publication? (Non-exhaustive examples of timeliness topics: holiday posts, back to school posts; cold-weather safety tactics, etc.)</CategorizedQuestion>\r\n                \r\n                <h2>Tone</h2>\r\n                <StandaloneQuestion id=\"tone\" handler={ this.handleChangeSingle }val={ this.state.tone }>Does the tone match the client's brand and any provided notes on tone?</StandaloneQuestion>\r\n                \r\n                <h2>User-Focused Content/Conversion</h2>\r\n                <MultiChoiceQuestion category=\"focus\" id=\"topic\" handler={ this.handleChangeCategorized } val={ this.state.focus.topic }>Does the content stay focused on the topic? (Example: A headline sets an expectation for the blog, but the content focuses on a different topic)</MultiChoiceQuestion>\r\n                <MultiChoiceQuestion category=\"focus\" id=\"headline\" handler={ this.handleChangeCategorized } val={ this.state.focus.headline }>Does the content contain an interesting headline?</MultiChoiceQuestion>\r\n                <CategorizedQuestion category=\"focus\" id=\"adverseness\" handler={ this.handleChangeCategorized } val={ this.state.focus.adverseness }>Does the content avoid taking a position adverse to the interests of the intended audience? </CategorizedQuestion>\r\n                <CategorizedQuestion category=\"focus\" id=\"clientGoals\" handler={ this.handleChangeCategorized } val={ this.state.focus.clientGoals }>Is the content consistent with client goals as outlined in Performance Console? Tone and content is appropriate for audience and accurate representation of the firm, per directions provided. Content would not be considered puerile or offensive to an average and reasonable reader.</CategorizedQuestion>\r\n                <MultiChoiceQuestion category=\"focus\" id=\"headers\" handler={ this.handleChangeCategorized } val={ this.state.focus.headers }>Does the content have user-focused headers that also describe the content below them? </MultiChoiceQuestion>\r\n                \r\n                <h2>Source</h2>\r\n                <MultiChoiceQuestion id=\"source\" handler={ this.handleChangeCategorized } val={ this.state.source } >Did the writer select appropriate sources to support the chosen topic?</MultiChoiceQuestion>\r\n                \r\n                <h2>Performance</h2>\r\n                <MultiChoiceQuestion category=\"performance\" id=\"linkText\" handler={ this.handleChangeCategorized } val={ this.state.performance.linkText }>Does anchor text give users a clear understanding of where the link(s) will lead? </MultiChoiceQuestion>\r\n                <MultiChoiceQuestion category=\"performance\" id=\"linkMatchesHeaders\" handler={ this.handleChangeCategorized } val={ this.state.performance.linkMatchesHeaders }>Does anchor text avoid using words that exactly match the content title or H1 header of the destination page?</MultiChoiceQuestion>\r\n                \r\n                <h2>Compliance with Ethical Rules</h2>\r\n                <CategorizedQuestion category=\"compliance\" id=\"words\" handler={ this.handleChangeCategorized } val={ this.state.compliance.words }>Does the content avoid words like expert, expertise, specialist or specialize? Acceptable use may include use when an attorney is a board-certified specialist. </CategorizedQuestion>\r\n                <CategorizedQuestion category=\"compliance\" id=\"isEthical\" handler={ this.handleChangeCategorized } val={ this.state.compliance.isEthical }>Is the content free from ethical issues (expertise, comparisons, promises results, conflicts of interest)?</CategorizedQuestion>\r\n                <CategorizedQuestion category=\"compliance\" id=\"noMisleadingImpressions\" handler={ this.handleChangeCategorized } val={ this.state.compliance.noMisleadingImpressions }>Does the content avoid misleading impressions or promising results?</CategorizedQuestion>\r\n                <CategorizedQuestion category=\"compliance\" id=\"noFactualInaccuracies\" handler={ this.handleChangeCategorized } val={ this.state.compliance.noFactualInaccuracies } warning=\"A 'no' to this question results in automatic failure to achieve, a JIRA ticket should be filed and the blog post should be taken down immediately.\">Are there no obvious legal or factual inaccuracies the reviewer can see without consulting another source? Are common legal terms (e.g., plaintiff, prosecution) used correctly?</CategorizedQuestion>\r\n                <button onClick={ this.formSubmit } className=\"btn btn-primary mt-5 mb-5\" >Submit</button>\r\n              </form>\r\n            </article>\r\n          <Sidebar />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\t    \r\n    );\r\n  }\r\n}\r\n\r\nexport default Content;\r\n","import React, { Component } from 'react';\r\nimport Header from '_components/Header';\r\nimport { exportPostData } from '_actions/PostActions';\r\n\r\nclass Export extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n        requestId: \"\",\r\n        postType: \"ebp\"\r\n    }\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(e){\r\n    if(e.target.id == \"select-post-type\"){\r\n      this.setState( { postType : e.target.value } );\r\n    }\r\n    else if(e.target.id == \"export-request\"){\r\n      this.setState( { requestId : e.target.value } );\r\n    }\r\n  }\r\n\r\n  handleSubmit(){\r\n    exportPostData( this.state.postType, this.state.requestId );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <div className=\"container\">\r\n          <article id=\"main-col\" className=\"w-50 mt-5 pt-5\">\r\n            <form onSubmit = { this.handleSubmit } >\r\n              <div className=\"input-group mb-3\">\r\n                  <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\">Blog Type: &nbsp;</span>\r\n                  </div>\r\n                  <select name=\"post-type\" id=\"select-post-type\" className=\"form-control\" onChange = { this.handleChange } value = { this.state.postType } required>\r\n                    <option value=\"ebp\">EBP</option>\r\n                    <option value=\"tbp\">TBP</option>\r\n                  </select>\r\n              </div>\r\n              <div className=\"input-group mb-3\">\r\n                  <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\">Request ID:</span>\r\n                  </div>\r\n                  <input type=\"text\" value={ this.state.requestId } onChange= { this.handleChange } className=\"form-control\" id=\"export-request\" required />\r\n              </div>\r\n              <div className=\"form-group float-right\">\r\n                  <button type=\"submit\" className=\"btn btn-success\" >Export</button> \r\n              </div>\r\n            </form>\r\n          </article>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Export;\r\n","import dispatcher from '_dispatcher.js';\r\nimport AppDataStore from '_store/AppDataStore';\r\n\r\nexport function getReport( start, end, postType ){\r\n    dispatcher.dispatch({\r\n        type: \"LOADING_START\"\r\n    });\r\n    let url = `/api/reports/${postType}`;\r\n    fetch(url, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Authorization\": \"Bearer \" + AppDataStore.getToken()\r\n        },\r\n        body: JSON.stringify({\r\n            \"startDate\": start,\r\n            \"endDate\": end\r\n        })\r\n    })\r\n    .then( res => res.json() )\r\n    .then( (body) => {\r\n        dispatcher.dispatch({\r\n            type: \"NEW_REPORT\",\r\n            payload: body\r\n        });\r\n        dispatcher.dispatch({\r\n            type: \"LOADING_COMPLETE\"\r\n        });\r\n    } )\r\n    .catch( err => {\r\n        dispatcher.dispatch({\r\n            type: \"APP_ERROR\",\r\n            error: err\r\n        });\r\n    })\r\n    \r\n}\r\n\r\nexport function updateReport( data ){\r\n    dispatcher.dispatch({\r\n        type: \"UPDATE_REPORT\",\r\n        payload: data\r\n    });\r\n}","import { EventEmitter } from 'events';\r\nimport dispatcher from '_dispatcher.js';\r\n\r\nclass Store extends EventEmitter{\r\n    constructor(props){\r\n        super(props);\r\n        this.data = {\r\n            fromDate: new Date( (new Date).getFullYear(), 0, 1 ),\r\n            toDate: new Date(),\r\n            postType: \"ebp\",\r\n            report: null\r\n        }\r\n    }\r\n\r\n    handleActions(action){\r\n        switch(action.type){\r\n            case \"NEW_REPORT\": \r\n            this.data.report = action.payload;\r\n            this.emit(\"change\");\r\n            break;\r\n        }\r\n\r\n        switch(action.type){\r\n            case \"UPDATE_REPORT\": \r\n            console.log(action.payload);\r\n            for(let prop in action.payload){\r\n                this.data[prop] = action.payload[prop]\r\n            }\r\n            this.emit(\"change\");\r\n            console.log(this.data);\r\n            break;\r\n        }\r\n    }\r\n\r\n    getData(){\r\n        return this.data;\r\n    }\r\n}\r\n\r\nconst newStore = new Store;\r\n\r\ndispatcher.register(newStore.handleActions.bind(newStore));\r\n\r\nexport default newStore;","import React, { Component } from 'react';\r\nimport Header from '_components/Header';\r\nimport { getReport, updateReport } from '_actions/ReportActions';\r\nimport ReportData from '_store/ReportData';\r\nimport DatePicker from 'react-date-picker'; \r\nimport { RadialChart } from 'react-vis';\r\n\r\n\r\nclass Report extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.formSubmit = this.formSubmit.bind(this);\r\n    this.handleDate = this.handleDate.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.getReportData = this.getReportData.bind(this);\r\n    this.state = {\r\n\r\n    }\r\n  }\r\n\r\n  componentWillMount(){\r\n    this.getReportData();\r\n    ReportData.on('change', this.getReportData);\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    ReportData.removeListener('change', this.getReportData);\r\n  }\r\n\r\n  getReportData(){\r\n    console.log(\"got data\")\r\n    this.setState({\r\n      data: ReportData.getData()\r\n    });\r\n  }\r\n\r\n  formSubmit = (event) => { \r\n    event.preventDefault();\r\n    getReport( this.state.data.fromDate, this.state.data.toDate, this.state.data.postType );\r\n  }\r\n\r\n  handleDate = ( date, type ) => {\r\n    updateReport( { \r\n      [type]: date\r\n     } );\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    console.log(e.target.value);\r\n    updateReport({ \r\n        postType: e.target.value \r\n    });\r\n  }\r\n\r\n  render() {\r\n    let reportComponent = \"\";\r\n    if(this.state.data.report){\r\n      const data = [\r\n        { angle: this.state.data.report.achieved, color: \"#28a745\" },\r\n        { angle: this.state.data.report.partiallyAchieved, color: \"#ffc107\" }, \r\n        { angle: this.state.data.report.didNotAchieve, color: \"#dc3545\" }\r\n      ];\r\n      reportComponent = (\r\n      <div>\r\n        <p className=\"p-3 mb-2 bg-success text-white\">Achieved: { this.state.data.report.achieved }</p>\r\n        <p className=\"p-3 mb-2 bg-warning text-dark\">Partially achieved: { this.state.data.report.partiallyAchieved }</p>\r\n        <p className=\"p-3 mb-2 bg-danger text-white\">Did not achieve: { this.state.data.report.didNotAchieve }</p>\r\n        <h3 className=\"mt-5\">Reference Chart: </h3>\r\n        <div className=\"mx-auto d-table  mt-3\">\r\n          <RadialChart width={300} height={300} data={data} showLabels={true} colorType=\"literal\"/>\r\n        </div> \r\n      </div> );\r\n    }\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <div className=\"container-fluid mw-1500\">\r\n          <div className=\"row d-flex justify-content-between\">\r\n            <article id=\"main-col\" className=\"mt-2 pt-5\">\r\n              <h3 className=\"mb-5\">Choose dates to show a report: </h3>\r\n              <form className=\"form-inlines\" onSubmit={ this.formSubmit }>\r\n                <div className=\"row mb-4\">\r\n                  <div className=\"col-md-3\">\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"formGroupExampleInput\">From:  &nbsp;</label>    \r\n                      <DatePicker onChange={ ( date ) => { this.handleDate( date, 'fromDate'  ) } } value={ this.state.data.fromDate }/>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-3\">\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"formGroupExampleInput\">To:  &nbsp;</label>\r\n                      <DatePicker onChange={ ( date ) => { this.handleDate( date, 'toDate' ) } } value={ this.state.data.toDate }/>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-3\">\r\n                    <div className=\"input-group\">\r\n                        <div className=\"input-group-prepend\">\r\n                          <label>Blog Type: &nbsp;</label>\r\n                        </div>\r\n                        <select name=\"post-type\" id=\"select-post-type\" className=\"form-control\" onChange = { this.handleChange } value = { this.state.data.postType } required>\r\n                            <option value=\"ebp\">EBP</option>\r\n                            <option value=\"tbp\">TBP</option>\r\n                        </select>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-3\">\r\n                    <button type=\"button\" type=\"submit\" className=\"btn btn-primary\"> Show Report </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n              { reportComponent }\r\n            </article>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Report;\r\n","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Header from '_components/Header';\r\nimport Sidebar from '_components/Sidebar';\r\nimport CategorizedQuestion from '_components/CategorizedQuestion';\r\nimport MultiChoiceQuestion from '_components/MultiChoiceQuestion';\r\nimport StatusBar from '_components/StatusBar';\r\nimport PostDataStore from '_store/PostDataStore';\r\nimport AppDataStore from '_store/AppDataStore';\r\nimport { submitPost, updatePostData, forceSubmitPostOverride } from '_actions/PostActions';\r\n\r\nimport '_components/index.css';\r\n\r\nclass Content extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.formSubmit = this.formSubmit.bind(this);\r\n    this.getPostData = this.getPostData.bind(this);\r\n    this.handleChangeSingle = this.handleChangeSingle.bind(this);\r\n    this.handleChangeCategorized = this.handleChangeCategorized.bind(this);\r\n    this.handleOverrideChange = this.handleOverrideChange.bind(this);\r\n    this.formFinalSubmit = this.formFinalSubmit.bind(this);\r\n  }\r\n\r\n  componentWillMount(){\r\n    PostDataStore.reCalculate();\r\n    PostDataStore.on(\"change\", this.getPostData);\r\n    this.getPostData();\r\n    this.setState({confirmSubmission: false, override: false });\r\n  }\r\n\r\n  componentWillUnmount(){\r\n      PostDataStore.removeListener('change', this.getPostData);\r\n  }\r\n\r\n  getPostData(){\r\n    this.setState(PostDataStore.getPostData());\r\n  }\r\n\r\n  formSubmit(event){ \r\n    event.preventDefault();\r\n    this.setState({confirmSubmission: true});\r\n  }\r\n  \r\n  formFinalSubmit(override){\r\n    if(override){\r\n      forceSubmitPostOverride(PostDataStore.getPostData(), AppDataStore.getCurrentFormType());\r\n    }\r\n    else{\r\n      submitPost(PostDataStore.getPostData(), AppDataStore.getCurrentFormType());\r\n    }\r\n  }\r\n\r\n  handleChangeSingle(id, value){\r\n    updatePostData( null, id, value );\r\n  }\r\n\r\n  handleChangeCategorized(cat, id, value){\r\n      updatePostData( cat, id, value );\r\n  }\r\n\r\n  handleOverrideChange(){\r\n      this.setState({\r\n        override: !this.state.override\r\n      });\r\n  }\r\n\r\n  render() {\r\n    let confirmStatus = \"confirm-submission d-none\";\r\n    if(this.state.confirmSubmission){\r\n      confirmStatus = \"confirm-submission\";\r\n    }\r\n\r\n    if(!this.state.postInfo){\r\n      return <Redirect to='/' />\r\n    }\r\n    \r\n    return (\r\n      <div>\r\n        <Header />\r\n        <div className={confirmStatus}>\r\n            <div className=\"confirm-box p-4\">\r\n              <div className=\"form-group\">\r\n                <p>Are you sure you want to submit these changes?</p>\r\n                <p><span>Total: </span> <strong>{ this.state.total }/29</strong></p>\r\n                <p><span>Score: </span> <strong>{ this.state.score } %</strong></p>\r\n                <p><span>Status: </span> <strong>{ this.state.status }</strong></p>\r\n                <button onClick={ ()=>{ this.formFinalSubmit( this.state.override ) } } className=\"btn btn-primary mr-2\">Yes</button>\r\n                <button onClick={ () => { this.setState( { confirmSubmission: false } ) } } className=\"btn btn-danger\">No</button>\r\n                <div class=\"form-check mt-3\">\r\n                  <input class=\"form-check-input mt-2\" type=\"checkbox\" checked={this.state.override} onChange={this.handleOverrideChange} id=\"override\" />\r\n                  <label class=\"form-check-label\" for=\"override\">\r\n                    Overwrite post instead of adding\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"container-fluid mw-1500\">\r\n          <div className=\"row d-flex justify-content-between\">\r\n            <article id=\"main-col\" className=\"mt-5 pt-5\">\r\n              <StatusBar total={this.state.total} totalPercent={this.state.score} status={this.state.status} totalPossiblePoints={29}></StatusBar>\r\n              <form>\r\n                <h2>Plagiarism/Duplicate Content</h2>\r\n                <CategorizedQuestion category=\"plagiarism\" id=\"copyscape\" handler={ this.handleChangeCategorized } val={ this.state.plagiarism.copyscape }  warning=\"A 'no' to this question results in automatic failure to achieve, a JIRA ticket should be filed and the blog post should be taken down immediately.\">Is the content free of plagiarism/duplicate content based on a Copyscape search?</CategorizedQuestion>\r\n                <CategorizedQuestion category=\"plagiarism\" id=\"uniqueness\" handler={ this.handleChangeCategorized } val={ this.state.plagiarism.uniqueness }>Is the content unique as compared to other posts on the client's site? Topic and content should be unique as compared to the recent posts on the main blog landing page.</CategorizedQuestion>\r\n                \r\n                <h2>Basic Spell Check and Review</h2>\r\n                <CategorizedQuestion category=\"spellcheck\" id=\"basic\" handler={ this.handleChangeCategorized } val={ this.state.spellcheck.basic }>Does the post pass a basic Word spell check?</CategorizedQuestion>\r\n                <CategorizedQuestion category=\"spellcheck\" id=\"vendorInfo\" handler={ this.handleChangeCategorized } val={ this.state.spellcheck.vendorInfo }>If used in the blog post, are the firm name and geography correct?</CategorizedQuestion>\r\n                <CategorizedQuestion category=\"spellcheck\" id=\"wordUsage\" handler={ this.handleChangeCategorized } val={ this.state.spellcheck.wordUsage }>Are all correctly spelled words used correctly? (Example: trial instead of trail)</CategorizedQuestion>\r\n                <CategorizedQuestion category=\"spellcheck\" id=\"grammar\" handler={ this.handleChangeCategorized } val={ this.state.spellcheck.grammar }>Is the content free from major grammar errors? (Examples include missing words that affect the readability or meaning of a sentence, glaringly incorrect punctuation, etc.)</CategorizedQuestion>\r\n                \r\n                <h2>Writing Proficiency</h2>\r\n                <CategorizedQuestion category=\"writingProficiency\" id=\"pov\" handler={ this.handleChangeCategorized } val={ this.state.writingProficiency.pov }>Is the point of view consistent?</CategorizedQuestion>\r\n                <CategorizedQuestion category=\"writingProficiency\" id=\"grammar\" handler={ this.handleChangeCategorized } val={ this.state.writingProficiency.grammar }>Is the content free of grammar minor grammar errors? (Examples include agreement errors, capitalization errors, AP Style errors.)</CategorizedQuestion>\r\n                <CategorizedQuestion category=\"writingProficiency\" id=\"readability\" handler={ this.handleChangeCategorized } val={ this.state.writingProficiency.readability }>Does the content read well? For example: Is it free from redundancy, unnecessary repetition, inaccuracies and gaps in logic?</CategorizedQuestion>\r\n                \r\n                <h2>Topic</h2>\r\n                <MultiChoiceQuestion category=\"topic\" id=\"appropriateness\" handler={ this.handleChangeCategorized } val={ this.state.topic.appropriateness }  warning=\"A '0' results in an automatic failure. A JIRA ticket should be filed and the post should be taken down immediately.\">Did the writer choose an appropriate topic for the client's practice and location (e.g., client practices Los Angeles family law and topic is about California child custody)? Did the writer take provided notes on topic selection into consideration?</MultiChoiceQuestion>\r\n                <CategorizedQuestion category=\"topic\" id=\"date\" handler={ this.handleChangeCategorized } val={ this.state.topic.date}>Is the subject of the post appropriate given the date of its publication? (Non-exhaustive examples of timeliness topics: holiday posts, back to school posts; cold-weather safety tactics, etc.)</CategorizedQuestion>\r\n                \r\n                <h2>User-Focused Content/Conversion</h2>\r\n                <MultiChoiceQuestion category=\"focus\" id=\"topic\" handler={ this.handleChangeCategorized } val={ this.state.focus.topic }>Does the content stay focused on topic? Does the content match the page topic?</MultiChoiceQuestion>\r\n                <MultiChoiceQuestion category=\"focus\" id=\"headline\" handler={ this.handleChangeCategorized } val={ this.state.focus.headline }>Does the content contain an interesting headline?</MultiChoiceQuestion>\r\n                <CategorizedQuestion category=\"focus\" id=\"appropriateness\" handler={ this.handleChangeCategorized } val={ this.state.focus.appropriateness }>Are the tone and content appropriate for audience? Is the firm accurately represented? Content would not be considered puerile or offensive to an average and reasonable reader.</CategorizedQuestion>\r\n                <MultiChoiceQuestion category=\"focus\" id=\"clientPracGoals\" handler={ this.handleChangeCategorized } val={ this.state.focus.clientPracGoals }>Is the content consistent with client's practice areas and goals as outlined in CoPortal?</MultiChoiceQuestion>\r\n                \r\n                \r\n                <h2>Source</h2>\r\n                <MultiChoiceQuestion id=\"source\" handler={ this.handleChangeCategorized } val={ this.state.source } >Did the writer select appropriate sources to support the chosen topic?</MultiChoiceQuestion>\r\n                \r\n                <h2>Performance</h2>\r\n                <MultiChoiceQuestion category=\"performance\" id=\"linkText\" handler={ this.handleChangeCategorized } val={ this.state.performance.linkText }>Does anchor text give users a clear understanding of where the link(s) will lead? </MultiChoiceQuestion>\r\n                <MultiChoiceQuestion category=\"performance\" id=\"linkMatchesHeaders\" handler={ this.handleChangeCategorized } val={ this.state.performance.linkMatchesHeaders }>Does anchor text avoid using words that exactly match the content title or H1 header of the destination page?</MultiChoiceQuestion>\r\n                \r\n                <h2>Compliance with Ethical Rules</h2>\r\n                <CategorizedQuestion category=\"compliance\" id=\"words\" handler={ this.handleChangeCategorized } val={ this.state.compliance.words }>Does the content avoid words like expert, expertise, specialist or specialize? Acceptable use may include use when an attorney is a board-certified specialist. </CategorizedQuestion>\r\n                <CategorizedQuestion category=\"compliance\" id=\"isEthical\" handler={ this.handleChangeCategorized } val={ this.state.compliance.isEthical }>Is the content free from ethical issues (expertise, comparisons, promises results, conflicts of interest)?</CategorizedQuestion>\r\n                <CategorizedQuestion category=\"compliance\" id=\"noMisleadingImpressions\" handler={ this.handleChangeCategorized } val={ this.state.compliance.noMisleadingImpressions }>Does the content avoid misleading impressions or promising results?</CategorizedQuestion>\r\n                <CategorizedQuestion category=\"compliance\" id=\"noFactualInaccuracies\" handler={ this.handleChangeCategorized } val={ this.state.compliance.noFactualInaccuracies } warning=\"A 'no' to this question results in automatic failure to achieve, a JIRA ticket should be filed and the blog post should be taken down immediately.\">Are there no obvious legal or factual inaccuracies the reviewer can see without consulting another source? Are common legal terms (e.g., plaintiff, prosecution) used correctly?</CategorizedQuestion>\r\n                <button onClick={this.formSubmit} className=\"btn btn-primary mt-5 mb-5\" handler={ this.formSubmit } >Submit</button>\r\n              </form>\r\n            </article>\r\n          <Sidebar />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\t    \r\n    );\r\n  }\r\n}\r\n\r\nexport default Content;\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport Login from '_containers/Login';\r\nimport Dashboard from '_containers/Dashboard';\r\nimport Header from '_components/Header';\r\nimport Settings from '_containers/Settings';\r\nimport Reset from '_containers/Login/Reset';\r\nimport InitialDetails from '_containers/InitialDetails';\r\nimport EBP from '_containers/EBP';\r\nimport Export from '_containers/Export';\r\nimport Report from '_containers/Report';\r\nimport TBP from '_containers/TBP';\r\nimport './App.css'; \r\nimport appDataStore from '_store/AppDataStore';\r\nimport { checkToken, resetApp } from '_actions/AppActions';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nclass App extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = appDataStore.getAppState();\r\n    this.getAppState = this.getAppState.bind(this);\r\n    this.state.submissionSuccess = null;\r\n  }\r\n\r\n  componentWillMount(){\r\n    appDataStore.on('change', this.getAppState);\r\n    checkToken();\r\n  }\r\n\r\n  getAppState(){\r\n    this.setState(appDataStore.getAppState());\r\n  }\r\n\r\n  render() {\r\n    if(this.state.error){\r\n      let errObj = this.state.error;\r\n      try{\r\n        errObj = JSON.parse(this.state.error);\r\n      }\r\n      catch(e){\r\n        console.log(e);\r\n      }\r\n      if(errObj.errors && errObj.errors[\"postInfo.requestId\"].properties.type === \"unique\"){ // Force override for non unique posts\r\n        return (\r\n              <div className=\"mx-auto d-table\" style={{marginTop: '40vh'}}>\r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                  <strong>Errors encountered:</strong> <br/>\r\n                  This post has been previously entered and is not unique. If you need to override make sure to click the override check box before submitting<br/>\r\n                  <a href=\"javascript:void(0)\" onClick={ resetApp } >Return to the application</a>\r\n                </div>\r\n              </div>\r\n        );\r\n      }\r\n      else{\r\n        return (\r\n              <div className=\"mx-auto d-table\" style={{marginTop: '40vh'}}>\r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                  <strong>Errors encountered:</strong> <br/>\r\n                  { JSON.stringify(errObj.message) } <br/>\r\n                  { JSON.stringify(errObj) } <br/>\r\n                  <a href=\"javascript:void(0)\" onClick={ resetApp } >Click to return to app</a>\r\n                </div>\r\n              </div>\r\n        );\r\n      }\r\n    }\r\n    if(this.state.submissionSuccess){\r\n      return (\r\n          <div className=\"mx-auto d-table\" style={{marginTop: '40vh'}}>\r\n            <div className=\"alert alert-success\" role=\"alert\">\r\n              <strong>Successfully added:</strong> <br/>\r\n              <a href=\"javascript:void(0)\" onClick={ resetApp } >Click to return to app</a>\r\n            </div>\r\n          </div>\r\n      );\r\n    }\r\n    else if(this.state.loading){\r\n      return (\r\n        <div className=\"mx-auto d-table\" style={{marginTop: '40vh'}}>\r\n          <Loader type=\"Puff\" color=\"#00BFFF\" height=\"100\" width=\"100\" />\r\n        </div>\r\n      ); \r\n    }\r\n    else if(!this.state.isLoggedIn){\r\n      return (<Login />);\r\n    }\r\n    else{\r\n      return (\r\n        <BrowserRouter>\r\n            <Switch>\r\n              <Route exact path='/' component={Dashboard} />\r\n              <Route exact path='/initial-details' component={ InitialDetails } />\r\n              <Route exact path='/ebp' component={ EBP } />\r\n              <Route exact path='/tbp' component={ TBP } />\r\n              <Route exact path='/export' component={ Export } />\r\n              <Route exact path='/report' component={ Report } />\r\n              <Route path='/settings' component={ Settings } />\r\n              <Route path='/reset-password' component={ Reset } />\r\n            </Switch>\r\n        </BrowserRouter>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport default App; \r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from 'App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n ","module.exports = __webpack_public_path__ + \"static/media/iconLogin.2b7412eb.svg\";"],"sourceRoot":""}